package ${package.ServiceImpl};

import com.alibaba.fastjson.JSONObject;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {

}
#else
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {

    @Resource
    ${table.mapperName} mapper;

    @Override
    public Page<${entity}> list(JSONObject parms) {
        int limit = parms.get("limit") == null ? 10 : Integer.parseInt(parms.get("limit").toString());
        int offset = parms.get("offset") == null ? 0 : Integer.parseInt(parms.get("offset").toString());
        Page<${entity}> page = new Page<${entity}>(offset, limit);
        EntityWrapper<${entity}> wrapper = new EntityWrapper<>();
        List<${entity}> lists = mapper.selectPage(page, wrapper);
        if (lists == null) {
            lists = new ArrayList<>();
        }
        page.setRecords(lists);
        return page;
    }

    @Override
    public int save(${entity} entity) {
    return mapper.insert(entity);
    }

    @Override
    public int delete(Serializable[] pks) {
    List<Serializable> list = Arrays.asList(pks);
    return mapper.deleteBatchIds(list);
    }

    @Override
    public int update(${entity} entity) {
    return mapper.updateById(entity);
    }
}
#end
